{"version":3,"sources":["webpack:///./src/pages/Copy.vue","webpack:///./src/hooks/copy.ts","webpack:///./src/pages/Copy.vue?7e78","webpack:///./src/pages/Copy.vue?4178"],"names":["style","placeholder","value","class","copyStr","type","useCopy","copy","url","input","document","createElement","body","appendChild","select","execCommand","removeChild","name","components","props","setup","ctx","data","message","success","render"],"mappings":"wKAEwD,M,gMADtD,yBAAsF,GAA7EA,MAAA,gBAAqBC,YAAY,YAAoBC,MAAO,EAAAA,M,gDAAA,EAAAA,MAAK,K,kBAC1E,yBAAmE,GAAzDC,MAAM,OAAQ,QAAO,EAAAC,QAASC,KAAK,U,+BAAS,iBAAE,C,2DCF7CC,EAAU,WACrB,IAAMC,EAAO,SAACC,GACZ,IAAIC,EAAQC,SAASC,cAAc,SACnCF,EAAMP,MAAQM,EACdE,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMK,SACNJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,IAE5B,MAAO,CACLF,SCDW,+BAAgB,CAC7BU,KAAM,GACNC,WAAY,GACZC,MAAO,GACPC,MAJ6B,SAIvBD,EAAOE,GAAiB,MACff,IAARC,EADuB,EACvBA,KACDe,EAAa,sBAAe,CAC9BpB,MAAO,KAELE,EAAU,WACZG,EAAKe,EAAKpB,OACVqB,EAAA,KAAQC,QAAQ,SAElB,wCACK,oBAAOF,IADZ,IAEElB,eCrBN,EAAOqB,OAASA,EAED","file":"js/chunk-2d0b65b7.c4e50e97.js","sourcesContent":["<template>\r\n  <a-input style=\"width: 600px\" placeholder=\"输入的内容会被复制\" v-model:value=\"value\"></a-input>\r\n  <a-button class=\"ml-1\" @click=\"copyStr\" type=\"danger\">复制</a-button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {defineComponent, reactive, toRefs, SetupContext} from 'vue'\r\nimport {message} from \"ant-design-vue\"\r\nimport {useCopy} from \"@/hooks/copy\"\r\n\r\ninterface Data {\r\n  value: string\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"\",\r\n  components: {},\r\n  props: {},\r\n  setup(props, ctx: SetupContext) {\r\n    let {copy} = useCopy()\r\n    let data: Data = reactive<Data>({\r\n      value: ''\r\n    })\r\n    let copyStr = () => {\r\n      copy(data.value)\r\n      message.success('复制成功')\r\n    }\r\n    return {\r\n      ...toRefs(data),\r\n      copyStr\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\"></style>\r\n","export const useCopy = () => {\n  const copy = (url: string) => {\n    let input = document.createElement(\"input\") // 直接构建input\n    input.value = url // 设置内容\n    document.body.appendChild(input)  // 添加临时实例\n    input.select() // 选择实例内容\n    document.execCommand(\"Copy\") // 执行复制\n    document.body.removeChild(input) // 删除临时实例\n  }\n  return {\n    copy,\n  }\n}\n","\r\nimport {defineComponent, reactive, toRefs, SetupContext} from 'vue'\r\nimport {message} from \"ant-design-vue\"\r\nimport {useCopy} from \"@/hooks/copy\"\r\n\r\ninterface Data {\r\n  value: string\r\n}\r\n\r\nexport default defineComponent({\r\n  name: \"\",\r\n  components: {},\r\n  props: {},\r\n  setup(props, ctx: SetupContext) {\r\n    let {copy} = useCopy()\r\n    let data: Data = reactive<Data>({\r\n      value: ''\r\n    })\r\n    let copyStr = () => {\r\n      copy(data.value)\r\n      message.success('复制成功')\r\n    }\r\n    return {\r\n      ...toRefs(data),\r\n      copyStr\r\n    }\r\n  }\r\n})\r\n","import { render } from \"./Copy.vue?vue&type=template&id=7dcf03ac&bindings={}\"\nimport script from \"./Copy.vue?vue&type=script&lang=ts\"\nexport * from \"./Copy.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}